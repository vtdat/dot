{
	"9o.hist./Users/xla/Library/Application Support/Sublime Text 3/Packages/GoSublime":
	[
		"help"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/controller":
	[
		"go build",
		",",
		"help",
		";14",
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/handler/http":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/platform/generate":
	[
		"go test -v -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/connection":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/device":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/event":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/member":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/object":
	[
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/session":
	[
		"GoSublime r16.03.22-1 9o: type `help` for help and command documentation\n\n[ `go test -tags integration` | done: 3.542233169s ]\n\t--- FAIL: TestMemQuery (0.00s)\n\t\thelper_test.go:118: have 7, want 1\n\t--- FAIL: TestPostgresQuery (0.06s)\n\t\thelper_test.go:118: have 7, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.152s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 2.0931033s ]\n\t--- FAIL: TestPostgresQuery (0.06s)\n\t\thelper_test.go:118: have 7, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.139s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 212.429596ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/session [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/session\n\t./postgres.go:41: syntax error: unexpected string literal, expecting semicolon, newline, or )\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.997871437s ]\n\t--- FAIL: TestPostgresQuery (0.04s)\n\t\thelper_test.go:114: empty slice passed to 'in' query\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.114s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.981414902s ]\n\t--- FAIL: TestPostgresQuery (0.05s)\n\t\thelper_test.go:114: empty slice passed to 'in' query\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.134s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # go test -tags integration\n[ `go test -tags integration` | done: 1.811259487s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/session\t0.105s\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 4.002074911s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/session\t0.135s\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 2.846183242s ]\n\t--- FAIL: TestValidate (0.00s)\n\t\tsession_test.go:13: have <nil>, want invalid session\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.280s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.756749046s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/session\t0.138s\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 274.503888ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/session [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/session\n\t./postgres.go:83: undefined: format\n\t./postgres.go:92: s.ID undefined (type *pgService has no field or method ID)\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 2.720983366s ]\n\t--- FAIL: TestPostgresPut (0.01s)\n\t\thelper_test.go:35: pq: syntax error at or near \"session_id\"\n\t--- FAIL: TestPostgresQuery (0.08s)\n\t\thelper_test.go:74: pq: syntax error at or near \"session_id\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.112s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.790379785s ]\n\t--- FAIL: TestPostgresPut (0.00s)\n\t\thelper_test.go:35: pq: syntax error at or near \"session_id\"\n\t--- FAIL: TestPostgresQuery (0.03s)\n\t\thelper_test.go:74: pq: syntax error at or near \"session_id\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.052s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.809573159s ]\n\t--- FAIL: TestPostgresPut (0.01s)\n\t\thelper_test.go:35: pq: syntax error at or near \"session_id\"\n\t--- FAIL: TestPostgresQuery (0.07s)\n\t\thelper_test.go:74: pq: syntax error at or near \"session_id\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.105s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.880610555s ]\n\t--- FAIL: TestPostgresPut (0.01s)\n\t\thelper_test.go:35: pq: syntax error at or near \",\"\n\t--- FAIL: TestPostgresQuery (0.05s)\n\t\thelper_test.go:74: pq: syntax error at or near \",\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.101s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.875725897s ]\n\t--- FAIL: TestPostgresPut (0.04s)\n\t\thelper_test.go:35: pq: invalid input syntax for integer: \"true\"\n\t--- FAIL: TestPostgresQuery (0.03s)\n\t\thelper_test.go:74: pq: invalid input syntax for integer: \"true\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.094s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.738393651s ]\n\t--- FAIL: TestPostgresPut (0.04s)\n\t\thelper_test.go:49: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.04s)\n\t\thelper_test.go:92: have 0, want 7\n\t\thelper_test.go:105: have 0, want 1\n\t\thelper_test.go:118: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.102s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 298.388229ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/session [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/session\n\t./helper_test.go:120: src declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.844645588s ]\n\t--- FAIL: TestMemQuery (0.00s)\n\t\thelper_test.go:88: have 1, want 7\n\t\thelper_test.go:114: have 0, want 1\n\t--- FAIL: TestPostgresPut (0.05s)\n\t\thelper_test.go:45: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.07s)\n\t\thelper_test.go:101: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.144s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.73599461s ]\n\t--- FAIL: TestMemQuery (0.00s)\n\t\thelper_test.go:88: have 1, want 7\n\t\thelper_test.go:114: have 0, want 1\n\t--- FAIL: TestPostgresPut (0.04s)\n\t\thelper_test.go:45: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.06s)\n\t\thelper_test.go:101: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.135s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 228.037695ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/session [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/session\n\t./mem.go:46: undefined: ErrNotFound\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 312.877959ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/session [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/session\n\t./mem.go:29: now declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # go test -tags integration\n[ `go test -tags integration` | done: 1.800710062s ]\n\t--- FAIL: TestPostgresPut (0.08s)\n\t\thelper_test.go:45: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.06s)\n\t\thelper_test.go:101: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.158s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # go test -tags integration\n[ `go test -tags integration` | done: 2.031177239s ]\n\tUWt5JEkpbWFRRlZLR0VLYmFfYmk=\n\t\n\t--- FAIL: TestPostgresPut (0.06s)\n\t\thelper_test.go:48: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.05s)\n\t\thelper_test.go:104: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.146s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.796429064s ]\n\tcnFRI2p3cVFqRlBUQUlQS1BqXyg=\n\t\n\t--- FAIL: TestPostgresPut (0.05s)\n\t\thelper_test.go:48: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.05s)\n\t\thelper_test.go:104: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.122s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ `go test -tags integration` | done: 1.889316238s ]\n\tY0JkTGxnKVJeKGl6dXZjI1oqa0M=\n\tY0JkTGxnKVJeKGl6dXZjI1oqa0M=\n\tdVh+SmtxSFZZJXhhYlQqTUZ+ZWg=\n\tQWRzdilEdF9uRWdGIUdnd21CeVQ=\n\tI2NCeilBTkVwUWVII0BLKGxlbH4=\n\tcXZ1REJUX35GJVlMZlJCZFlvQGY=\n\tdndKI0lyRG0mRExTciVlVm1VZ1A=\n\tcVYpayVWQ3VDQXFmQClZZlBpTiQ=\n\tKXJieEZ4ailrfkB4alQpTlNUd1g=\n\t\n\t--- FAIL: TestPostgresPut (0.04s)\n\t\thelper_test.go:48: have 0, want 1\n\t--- FAIL: TestPostgresQuery (0.05s)\n\t\thelper_test.go:104: have 0, want 1\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/session\t0.122s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/session/ ] # go test -tags integration",
		"go test -tags integration -run TestPostgresPut",
		"go test -tags integration"
	],
	"9o.hist./Users/xla/dev/src/github.com/tapglue/multiverse/service/user":
	[
		"go test",
		"go test -tags integration ./service/user",
		"go test -tags -run TestPostgresCount integration",
		"go test -tags -test.run TestPostgresCount integration",
		"go test -tags integration -run TestPostgresCount",
		"go test -tags integration -run TestPosgresSearch",
		"GoSublime r16.04.29-1 9o: type `help` for help and command documentation\n\n[ `go test -tags integration` | done: 4.021404472s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/user\t0.961s\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # go test -tags integration\n[ `go test -tags integration` | done: 366.786084ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./instrumentation.go:36: cannot use instrumentService literal (type *instrumentService) as type Service in return argument:\n\t\t*instrumentService does not implement Service (missing Search method)\n\t./logging.go:24: cannot use logService literal (type *logService) as type Service in return argument:\n\t\t*logService does not implement Service (missing Search method)\n\t./mem.go:17: cannot use memService literal (type *memService) as type Service in return argument:\n\t\t*memService does not implement Service (missing Search method)\n\t./postgres.go:79: cannot use pgService literal (type *pgService) as type Service in return argument:\n\t\t*pgService does not implement Service (missing Search method)\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 1.167221657s ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./mem.go:17: cannot use memService literal (type *memService) as type Service in return argument:\n\t\t*memService does not implement Service (missing Search method)\n\t./postgres.go:79: cannot use pgService literal (type *pgService) as type Service in return argument:\n\t\t*pgService does not implement Service (missing Search method)\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 323.614794ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./postgres.go:79: cannot use pgService literal (type *pgService) as type Service in return argument:\n\t\t*pgService does not implement Service (missing Search method)\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 3.998720439s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/user\t0.701s\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 241.012404ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:313: undefined: preapreFunc\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.500957169s ]\n\t--- FAIL: TestServiceSearc (0.00s)\n\t\thelper_test.go:314: not implemented\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:314: not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.575s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 567.185614ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:499: list declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 285.949856ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:497: cannot use nil as type string in argument to testList\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 376.61638ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:475: enabled declared and not used\n\t./helper_test.go:492: created declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 399.123169ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:491: created declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 407.519424ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:503: no new variables on left side of :=\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 426.848942ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:491: created declared and not used\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 3.870529765s ]\n\t--- FAIL: TestServiceSearc (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\t--- FAIL: TestPostgresSearch (0.01s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.669s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.407518316s ]\n\t--- FAIL: TestServiceSearc (0.00s)\n\t\thelper_test.go:513: have 17, want 1\n\t\thelper_test.go:516: not implemented\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.562s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 4.516239069s ]\n\t--- FAIL: TestServiceSearc (0.00s)\n\t\thelper_test.go:513: have 17, want 1\n\t\thelper_test.go:516: not implemented\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.736s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # go test -tags integration\n[ `go test -tags integration` | done: 345.650678ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./mem.go:276: cannot use sOopts.Emails (type []string) as type string in argument to contains\n\t./mem.go:277: cannot use sOopts.Firstnames (type []string) as type string in argument to contains\n\t./mem.go:278: cannot use u.LastRead (type time.Time) as type string in argument to contains\n\t./mem.go:278: cannot use sOopts.Lastnames (type []string) as type string in argument to contains\n\t./mem.go:279: cannot use sOopts.Usernames (type []string) as type string in argument to contains\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 361.201873ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./mem.go:276: cannot use sOpts.Emails (type []string) as type string in argument to contains\n\t./mem.go:277: cannot use sOpts.Firstnames (type []string) as type string in argument to contains\n\t./mem.go:278: cannot use u.LastRead (type time.Time) as type string in argument to contains\n\t./mem.go:278: cannot use sOpts.Lastnames (type []string) as type string in argument to contains\n\t./mem.go:279: cannot use sOpts.Usernames (type []string) as type string in argument to contains\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 279.775939ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./mem.go:278: cannot use u.LastRead (type time.Time) as type string in argument to contains\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 3.519454947s ]\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.614s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 247.560213ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./helper_test.go:507: type QueryOptions is not an expression\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.62385071s ]\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.641s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.492693321s ]\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: Search not implemented\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.613s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 374.591176ms ]\n\tFAIL\tgithub.com/tapglue/multiverse/service/user [build failed]\n\t\n\t# github.com/tapglue/multiverse/service/user\n\t./postgres.go:257: undefined: searchClause\n\t./postgres.go:259: undefined: searchClause\n\t./postgres.go:260: undefined: searchClause\n\t./postgres.go:260: too many arguments to append\n\t\n\texit status 2\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 3.92577636s ]\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: pq: syntax error at or near \")\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.672s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.375757134s ]\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put_last_read.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\t\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'custom_id')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'deleted')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->'social_ids'->>'twitter')::TEXT IN ($1, $2, $3, $4, $5, $6, $7)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'user_name')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ()\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.00s)\n\t\thelper_test.go:481: pq: syntax error at or near \")\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.578s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.709712914s ]\n\t--- FAIL: TestPostgresSearch (0.11s)\n\t\thelper_test.go:511: pq: column \"user864009099580722748\" does not exist\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.683s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 4.034232995s ]\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put_last_read.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\t\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'custom_id')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'deleted')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->'social_ids'->>'twitter')::TEXT IN ($1, $2, $3, $4, $5, $6, $7)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'user_name')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\t\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ((json_data->>'email' ILIKE user7861325021780298545@tapglue.t))\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.08s)\n\t\thelper_test.go:511: pq: column \"user7861325021780298545\" does not exist\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.683s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.455207929s ]\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tAND(json_data->>'id')::BIGINT IN ($2)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_put_last_read.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\t\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'custom_id')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'deleted')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'enabled')::BOOL = $1::BOOL\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'id')::BIGINT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->'social_ids'->>'twitter')::TEXT IN ($1, $2, $3, $4, $5, $6, $7)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_query.users\n\t\t\tWHERE (json_data->>'user_name')::TEXT IN ($1)\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\t\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ((json_data->>'email' ILIKE %user6746620195185121228@tapglue.t%))\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.10s)\n\t\thelper_test.go:511: pq: syntax error at or near \"%\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.603s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.339670265s ]\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ((json_data->>'email' ILIKE user5588144381518852730@tapglue.t))\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.09s)\n\t\thelper_test.go:511: pq: column \"user5588144381518852730\" does not exist\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.682s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.562452086s ]\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ((json_data->>'email' ILIKE %s%!)(string=user5863360680876818235@tapglue.t))\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.10s)\n\t\thelper_test.go:511: pq: syntax error at or near \"%\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.680s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration` | done: 2.811030513s ]\n\tSELECT json_data, last_read FROM service_search.users\n\t\t\tWHERE ((json_data->>'email' ILIKE %user6519143633693125910@tapglue.t%))\n\tORDER BY json_data->>'created_at' DESC\n\tLIMIT 200\n\t--- FAIL: TestPostgresSearch (0.10s)\n\t\thelper_test.go:511: pq: syntax error at or near \"%\"\n\tFAIL\n\texit status 1\n\tFAIL\tgithub.com/tapglue/multiverse/service/user\t0.538s\n\t\n\texit status 1\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] # \n[ `go test -tags integration -run TestPosgresSearch` | done: 4.192877338s ]\n\tPASS\n\tok  \tgithub.com/tapglue/multiverse/service/user\t0.017s\n[ ~/dev/src/github.com/tapglue/multiverse/service/user/ ] #",
		"GoSublime r16.04.29-1 9o: type `help` for help and command documentation",
		"go test -tags integration -run TestPostgresSearch",
		"go test -tags integration"
	],
	"ann": "a16.07.09-1",
	"install_version": "r16.07.09-1",
	"version": "r16.07.09-1"
}
